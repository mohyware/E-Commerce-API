openapi: 3.0.0
info:
  title: To Do List API
  contact: {}
  version: '1.0'
servers:
  - url: http://localhost:3000/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
            example:
              name: mohy
              email: mohy@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
            example:
              email: ahmed@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /todos:
    post:
      tags:
        - Tasks
      summary: Create Task
      operationId: CreateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
            example:
              title:  Project Update and Next Steps
              description: A meeting to discuss the progress of a project, address challenges, and plan for future steps.
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
        - Tasks
      summary: Get All Tasks
      operationId: GetAllTasks
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /todos/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The Task ID
    get:
      tags:
        - Tasks
      summary: Get Single Task
      operationId: GetSingleTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false

    patch:
      tags:
        - Tasks
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
            example:
              title: Project Update and Next Steps
              description: A meeting to discuss the progress of a project, address challenges, and plan for future steps.
              status: true
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Tasks
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: mohy
        email: mohy@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: ahmed@gmail.com
        password: secret
    CreateTaskRequest:
      title: CreateTaskRequest
      required:
        - title
        - description
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      example:
        title: Project Update and Next Steps
        description: A meeting to discuss the progress of a project, address challenges, and plan for future steps.
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
        - title
        - description
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status: 
          type: bool
      example:
        title: Project Update and Next Steps
        description: A meeting to discuss the progress of a project, address challenges, and plan for future steps.
        type: bool
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Auth
    description: ''
  - name: Tasks
    description: ''
